services:
  # --- Microservice de téléchargement CSV depuis Google Drive ---
  csv-downloader:
    build:
      context: .
    container_name: csv_downloader_service
    environment:
      - PYTHONUNBUFFERED=1
    working_dir: /app
    volumes:
      - ./src:/app/src:rw
      - ./data:/app/data:rw
    command: >
      python -u /app/src/csv_downloader.py
      --url "https://drive.google.com/file/d/1ZeJ2f1qfpENc-gIwYGiQsVM5nCGaTQkG/view?usp=drive_link"
      --output "/app/data/DATA_2025_pred_proj.csv"
      --retries 3
      --verify
    restart: "no"

  data-loading:
    build:
      context: .
    container_name: data_loading_service
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/src
    working_dir: /app
    volumes:
      - ./src:/app/src:rw
      - ./data:/app/data:rw
      - ./models:/app/models:rw
    command: >
      python -u -m src.data_loading
      --year 2025
      --data_dir /app/data
      --utils_dir /app/src/utils
    restart: "no"
    depends_on:
      - csv-downloader

  model-production:
    build:
      context: .
    container_name: model_production_service
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app/src
    working_dir: /app
    volumes:
      - ./src:/app/src:rw
      - ./data:/app/data:rw
      - ./models:/app/models:rw
    command: >
      python -u -m src.model_production_main
      --year 24
      --data_file /app/data/DATA.csv
    restart: "no"

  # --- Job one-shot : convertit CSV -> SQLite puis s'arrête (exit 0) ---
  csv-to-sqlite:
    build:
      context: .
    container_name: csv_to_sqlite_job
    working_dir: /app
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./src:/app/src:rw           # contient csv_to_sqlite.py
      - ./data:/app/data:rw         # CSV en entrée + .db en sortie
    command: [
      "python", "-u", "/app/src/csv_to_sqlite.py",
      "--input_csv", "/app/data/DATA_2025_pred_proj.csv",
      "--output_db", "/app/data/traces_metabase.db",
      "--table", "traces",
      "--if-exists", "replace",
      "--index", "email",
      "--include-prefixes", "G-CPE-100, city, prediction, UMAP, cluster",
      "--keep-cols", "email"
    ]
    restart: "no"
    depends_on:
      - csv-downloader

  # --- Metabase : démarre après que le job ci-dessus ait réussi ---
  metabase:
    image: metabase/metabase:v0.54.8
    container_name: metabase-dev-dp
    ports:
      - "3000:3000"
    environment:
      MB_DB_FILE: /metabase-data/metabase.db   # base interne Metabase (H2)
      TZ: Europe/Paris
    volumes:
      - ./metabase-data:/metabase-data         # persistance Metabase (H2)
      - ./data:/data:rw                        # tes .db SQLite accessibles (p.ex. /data/traces_metabase.db)
    depends_on:
      - csv-to-sqlite